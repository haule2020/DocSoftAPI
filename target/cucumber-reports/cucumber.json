[
  {
    "line": 1,
    "elements": [
      {
        "line": 18,
        "name": "Check if POST request with invalid Claim Id",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-invalid-claim-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3169782400,
              "status": "passed"
            },
            "line": 11,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1318981900,
              "status": "passed"
            },
            "line": 12,
            "name": "I call API \"20210305725tyy\", \"3810588879\", \"12345\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "20210305725tyy",
                  "offset": 12
                },
                {
                  "val": "3810588879",
                  "offset": 30
                },
                {
                  "val": "12345",
                  "offset": 44
                },
                {
                  "val": "1",
                  "offset": 53
                },
                {
                  "val": "1",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 63
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1852100,
              "status": "passed"
            },
            "line": 13,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10217700,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[invalid claim ]id\u003e but was:\u003c[data inval]id\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat stepDefinitions.ValidationSteps.iGetReturnMsg(ValidationSteps.java:55)\r\n\tat ✽.Then I get returnMsg \"invalid Claim Id\"(src/test/resources/Feature/DocSoftCopyAPI.feature:14)\r\n",
              "status": "failed"
            },
            "line": 14,
            "name": "I get returnMsg \"invalid Claim Id\"",
            "match": {
              "arguments": [
                {
                  "val": "invalid Claim Id",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 29,
        "name": "Check if POST request with Empty Claim Id",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-empty-claim-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 314378200,
              "status": "passed"
            },
            "line": 23,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 899774200,
              "status": "passed"
            },
            "line": 24,
            "name": "I call API \"\", \"2855718084\", \"12345\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 12
                },
                {
                  "val": "2855718084",
                  "offset": 16
                },
                {
                  "val": "12345",
                  "offset": 30
                },
                {
                  "val": "1",
                  "offset": 39
                },
                {
                  "val": "1",
                  "offset": 44
                },
                {
                  "val": "1",
                  "offset": 49
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 101700,
              "status": "passed"
            },
            "line": 25,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8179800,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[empty claim ]id\u003e but was:\u003c[data inval]id\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat stepDefinitions.ValidationSteps.iGetReturnMsg(ValidationSteps.java:55)\r\n\tat ✽.Then I get returnMsg \"empty Claim Id\"(src/test/resources/Feature/DocSoftCopyAPI.feature:26)\r\n",
              "status": "failed"
            },
            "line": 26,
            "name": "I get returnMsg \"empty Claim Id\"",
            "match": {
              "arguments": [
                {
                  "val": "empty Claim Id",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 42,
        "name": "Check if POST request with Claim Status not Pending",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-claim-status-not-pending;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 276989700,
              "status": "passed"
            },
            "line": 35,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2684178100,
              "status": "passed"
            },
            "line": 36,
            "name": "I call API \"I20210202201\", \"3817094202\", \"12345\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "I20210202201",
                  "offset": 12
                },
                {
                  "val": "3817094202",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 42
                },
                {
                  "val": "1",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 56
                },
                {
                  "val": "1",
                  "offset": 61
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 885200,
              "error_message": "java.lang.AssertionError: expected:\u003c406\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.ValidationSteps.iGetResponseCode(ValidationSteps.java:46)\r\n\tat ✽.Then I get response code 406(src/test/resources/Feature/DocSoftCopyAPI.feature:37)\r\n",
              "status": "failed"
            },
            "line": 37,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I get returnMsg \"claim status is not pending\"",
            "match": {
              "arguments": [
                {
                  "val": "claim status is not pending",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 43,
        "name": "Check if POST request with Claim Status not Pending",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-claim-status-not-pending;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 289881600,
              "status": "passed"
            },
            "line": 35,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2038494800,
              "status": "passed"
            },
            "line": 36,
            "name": "I call API \"I20210202202\", \"2814793251\", \"12345\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "I20210202202",
                  "offset": 12
                },
                {
                  "val": "2814793251",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 42
                },
                {
                  "val": "1",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 56
                },
                {
                  "val": "1",
                  "offset": 61
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 218500,
              "error_message": "java.lang.AssertionError: expected:\u003c406\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.ValidationSteps.iGetResponseCode(ValidationSteps.java:46)\r\n\tat ✽.Then I get response code 406(src/test/resources/Feature/DocSoftCopyAPI.feature:37)\r\n",
              "status": "failed"
            },
            "line": 37,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I get returnMsg \"claim status is not pending\"",
            "match": {
              "arguments": [
                {
                  "val": "claim status is not pending",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 56,
        "name": "Check if POST request with invalid policyNumber",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-invalid-policynumber;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 280030600,
              "status": "passed"
            },
            "line": 49,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3483315300,
              "status": "passed"
            },
            "line": 50,
            "name": "I call API \"202103057250\", \"1\", \"12345\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103057250",
                  "offset": 12
                },
                {
                  "val": "1",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 33
                },
                {
                  "val": "1",
                  "offset": 42
                },
                {
                  "val": "1",
                  "offset": 47
                },
                {
                  "val": "1",
                  "offset": 52
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 441600,
              "error_message": "java.lang.AssertionError: expected:\u003c406\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.ValidationSteps.iGetResponseCode(ValidationSteps.java:46)\r\n\tat ✽.Then I get response code 406(src/test/resources/Feature/DocSoftCopyAPI.feature:51)\r\n",
              "status": "failed"
            },
            "line": 51,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I get returnMsg \"invalid policyNumber\"",
            "match": {
              "arguments": [
                {
                  "val": "invalid policyNumber",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 57,
        "name": "Check if POST request with invalid policyNumber",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-invalid-policynumber;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 291586500,
              "status": "passed"
            },
            "line": 49,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2072896900,
              "status": "passed"
            },
            "line": 50,
            "name": "I call API \"202103057250\", \"38105888aa\", \"12345\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103057250",
                  "offset": 12
                },
                {
                  "val": "38105888aa",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 42
                },
                {
                  "val": "1",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 56
                },
                {
                  "val": "1",
                  "offset": 61
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 324400,
              "error_message": "java.lang.AssertionError: expected:\u003c406\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.ValidationSteps.iGetResponseCode(ValidationSteps.java:46)\r\n\tat ✽.Then I get response code 406(src/test/resources/Feature/DocSoftCopyAPI.feature:51)\r\n",
              "status": "failed"
            },
            "line": 51,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I get returnMsg \"invalid policyNumber\"",
            "match": {
              "arguments": [
                {
                  "val": "invalid policyNumber",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 58,
        "name": "Check if POST request with invalid policyNumber",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-invalid-policynumber;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 279381400,
              "status": "passed"
            },
            "line": 49,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 965666100,
              "status": "passed"
            },
            "line": 50,
            "name": "I call API \"202103057250\", \"381058888888\", \"12345\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103057250",
                  "offset": 12
                },
                {
                  "val": "381058888888",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 44
                },
                {
                  "val": "1",
                  "offset": 53
                },
                {
                  "val": "1",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 63
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 135900,
              "status": "passed"
            },
            "line": 51,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9183300,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[invalid policynumber]\u003e but was:\u003c[data invalid]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat stepDefinitions.ValidationSteps.iGetReturnMsg(ValidationSteps.java:55)\r\n\tat ✽.Then I get returnMsg \"invalid policyNumber\"(src/test/resources/Feature/DocSoftCopyAPI.feature:52)\r\n",
              "status": "failed"
            },
            "line": 52,
            "name": "I get returnMsg \"invalid policyNumber\"",
            "match": {
              "arguments": [
                {
                  "val": "invalid policyNumber",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 71,
        "name": "Check if send request with empty policyNumber",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-send-request-with-empty-policynumber;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 277354800,
              "status": "passed"
            },
            "line": 64,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 971507000,
              "status": "passed"
            },
            "line": 65,
            "name": "I call API \"202103081236\", \"\", \"3345\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103081236",
                  "offset": 12
                },
                {
                  "val": "",
                  "offset": 28
                },
                {
                  "val": "3345",
                  "offset": 32
                },
                {
                  "val": "1",
                  "offset": 40
                },
                {
                  "val": "1",
                  "offset": 45
                },
                {
                  "val": "1",
                  "offset": 50
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 82100,
              "status": "passed"
            },
            "line": 66,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7428300,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[empty doc]id\u003e but was:\u003c[data inval]id\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat stepDefinitions.ValidationSteps.iGetReturnMsg(ValidationSteps.java:55)\r\n\tat ✽.Then I get returnMsg \"empty docId\"(src/test/resources/Feature/DocSoftCopyAPI.feature:67)\r\n",
              "status": "failed"
            },
            "line": 67,
            "name": "I get returnMsg \"empty docId\"",
            "match": {
              "arguments": [
                {
                  "val": "empty docId",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 84,
        "name": "Check if send request with empty docId",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-send-request-with-empty-docid;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 283871200,
              "status": "passed"
            },
            "line": 77,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 901696200,
              "status": "passed"
            },
            "line": 78,
            "name": "I call API \"202103081236\", \"2855718084\", \"\", \"1\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103081236",
                  "offset": 12
                },
                {
                  "val": "2855718084",
                  "offset": 28
                },
                {
                  "val": "",
                  "offset": 42
                },
                {
                  "val": "1",
                  "offset": 46
                },
                {
                  "val": "1",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 56
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 110300,
              "status": "passed"
            },
            "line": 79,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8318800,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[empty policy number]\u003e but was:\u003c[data invalid]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat stepDefinitions.ValidationSteps.iGetReturnMsg(ValidationSteps.java:55)\r\n\tat ✽.Then I get returnMsg \"empty policy number\"(src/test/resources/Feature/DocSoftCopyAPI.feature:80)\r\n",
              "status": "failed"
            },
            "line": 80,
            "name": "I get returnMsg \"empty policy number\"",
            "match": {
              "arguments": [
                {
                  "val": "empty policy number",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 97,
        "name": "Check if send request with empty boxNo",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-send-request-with-empty-boxno;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 277780700,
              "status": "passed"
            },
            "line": 90,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1047767700,
              "status": "passed"
            },
            "line": 91,
            "name": "I call API \"202103081236\", \"2855718084\", \"12345\", \"\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103081236",
                  "offset": 12
                },
                {
                  "val": "2855718084",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 42
                },
                {
                  "val": "",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 55
                },
                {
                  "val": "1",
                  "offset": 60
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100800,
              "status": "passed"
            },
            "line": 92,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8820300,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[empty boxno]\u003e but was:\u003c[data invalid]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat stepDefinitions.ValidationSteps.iGetReturnMsg(ValidationSteps.java:55)\r\n\tat ✽.Then I get returnMsg \"empty boxNo\"(src/test/resources/Feature/DocSoftCopyAPI.feature:93)\r\n",
              "status": "failed"
            },
            "line": 93,
            "name": "I get returnMsg \"empty boxNo\"",
            "match": {
              "arguments": [
                {
                  "val": "empty boxNo",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 109,
        "name": "Check if send request with empty posision",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-send-request-with-empty-posision;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 298978500,
              "status": "passed"
            },
            "line": 102,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 887505900,
              "status": "passed"
            },
            "line": 103,
            "name": "I call API \"202103081236\", \"2855718084\", \"12345\", \"1\", \"\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103081236",
                  "offset": 12
                },
                {
                  "val": "2855718084",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 42
                },
                {
                  "val": "1",
                  "offset": 51
                },
                {
                  "val": "",
                  "offset": 56
                },
                {
                  "val": "1",
                  "offset": 60
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 79800,
              "status": "passed"
            },
            "line": 104,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7070000,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[empty posision]\u003e but was:\u003c[data invalid]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat stepDefinitions.ValidationSteps.iGetReturnMsg(ValidationSteps.java:55)\r\n\tat ✽.Then I get returnMsg \"empty posision\"(src/test/resources/Feature/DocSoftCopyAPI.feature:105)\r\n",
              "status": "failed"
            },
            "line": 105,
            "name": "I get returnMsg \"empty posision\"",
            "match": {
              "arguments": [
                {
                  "val": "empty posision",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 123,
        "name": "Check if send request with empty totalFiles",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-send-request-with-empty-totalfiles;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 275853700,
              "status": "passed"
            },
            "line": 116,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1328728500,
              "status": "passed"
            },
            "line": 117,
            "name": "I call API \"202103080110\", \"2819774058\", \"12345\", \"1\", \"1\", \"\"",
            "match": {
              "arguments": [
                {
                  "val": "202103080110",
                  "offset": 12
                },
                {
                  "val": "2819774058",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 42
                },
                {
                  "val": "1",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 56
                },
                {
                  "val": "",
                  "offset": 61
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 93100,
              "status": "passed"
            },
            "line": 118,
            "name": "I get response code 406",
            "match": {
              "arguments": [
                {
                  "val": "406",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8942100,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[empty totalfiles]\u003e but was:\u003c[data invalid]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat stepDefinitions.ValidationSteps.iGetReturnMsg(ValidationSteps.java:55)\r\n\tat ✽.Then I get returnMsg \"empty totalFiles\"(src/test/resources/Feature/DocSoftCopyAPI.feature:119)\r\n",
              "status": "failed"
            },
            "line": 119,
            "name": "I get returnMsg \"empty totalFiles\"",
            "match": {
              "arguments": [
                {
                  "val": "empty totalFiles",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 136,
        "name": "Check if POST request with valid Parameters",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-valid-parameters;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 337603200,
              "status": "passed"
            },
            "line": 129,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2641322000,
              "status": "passed"
            },
            "line": 130,
            "name": "I call API \"I20210304543\", \"3810588879\", \"12345\", \"INS21072400001\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "I20210304543",
                  "offset": 12
                },
                {
                  "val": "3810588879",
                  "offset": 28
                },
                {
                  "val": "12345",
                  "offset": 42
                },
                {
                  "val": "INS21072400001",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 69
                },
                {
                  "val": "1",
                  "offset": 74
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 115400,
              "status": "passed"
            },
            "line": 131,
            "name": "I get response code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7103000,
              "status": "passed"
            },
            "line": 132,
            "name": "I get returnMsg \"Success\"",
            "match": {
              "arguments": [
                {
                  "val": "Success",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 137,
        "name": "Check if POST request with valid Parameters",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-valid-parameters;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 287983500,
              "status": "passed"
            },
            "line": 129,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2228479700,
              "status": "passed"
            },
            "line": 130,
            "name": "I call API \"202103057250\", \"3810588879\", \"12346\", \"INS21072400002\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103057250",
                  "offset": 12
                },
                {
                  "val": "3810588879",
                  "offset": 28
                },
                {
                  "val": "12346",
                  "offset": 42
                },
                {
                  "val": "INS21072400002",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 69
                },
                {
                  "val": "1",
                  "offset": 74
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 78500,
              "status": "passed"
            },
            "line": 131,
            "name": "I get response code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8307700,
              "status": "passed"
            },
            "line": 132,
            "name": "I get returnMsg \"Success\"",
            "match": {
              "arguments": [
                {
                  "val": "Success",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 138,
        "name": "Check if POST request with valid Parameters",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-valid-parameters;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 314941800,
              "status": "passed"
            },
            "line": 129,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1937895100,
              "status": "passed"
            },
            "line": 130,
            "name": "I call API \"202103080470\", \"2815539950\", \"12347\", \"INS21072400003\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103080470",
                  "offset": 12
                },
                {
                  "val": "2815539950",
                  "offset": 28
                },
                {
                  "val": "12347",
                  "offset": 42
                },
                {
                  "val": "INS21072400003",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 69
                },
                {
                  "val": "1",
                  "offset": 74
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 72000,
              "status": "passed"
            },
            "line": 131,
            "name": "I get response code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7135600,
              "status": "passed"
            },
            "line": 132,
            "name": "I get returnMsg \"Success\"",
            "match": {
              "arguments": [
                {
                  "val": "Success",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 139,
        "name": "Check if POST request with valid Parameters",
        "description": "",
        "id": "receive-db-docs-soft-copies-from-ins;check-if-post-request-with-valid-parameters;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 367133900,
              "status": "passed"
            },
            "line": 129,
            "name": "I already authorozied",
            "match": {
              "location": "ValidationSteps.iAlreadyAuthorozied()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2018170600,
              "status": "passed"
            },
            "line": 130,
            "name": "I call API \"202103081236\", \"2855718084\", \"12348\", \"INS21072400004\", \"1\", \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "202103081236",
                  "offset": 12
                },
                {
                  "val": "2855718084",
                  "offset": 28
                },
                {
                  "val": "12348",
                  "offset": 42
                },
                {
                  "val": "INS21072400004",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 69
                },
                {
                  "val": "1",
                  "offset": 74
                }
              ],
              "location": "ValidationSteps.iCallAPI(String,String,String,String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 281100,
              "status": "passed"
            },
            "line": 131,
            "name": "I get response code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "ValidationSteps.iGetResponseCode(int)"
            },
            "matchedColumns": [
              6
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7841400,
              "status": "passed"
            },
            "line": 132,
            "name": "I get returnMsg \"Success\"",
            "match": {
              "arguments": [
                {
                  "val": "Success",
                  "offset": 17
                }
              ],
              "location": "ValidationSteps.iGetReturnMsg(String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Receive DB Docs soft-copies from INS",
    "description": "\nDescription: When I call API to upload documents\nI want system responding proply",
    "id": "receive-db-docs-soft-copies-from-ins",
    "keyword": "Feature",
    "uri": "src/test/resources/Feature/DocSoftCopyAPI.feature"
  }
]